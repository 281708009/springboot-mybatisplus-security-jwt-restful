#-------------------jpa数据库-----------------
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/springbootshiro_test?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&nullNamePatternMatchesAll=true&useSSL=true
#spring.datasource.username=user
#spring.datasource.password=1234
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@192.168.8.136:1521:XE
#spring.datasource.username=QQQ
#spring.datasource.password=7777
#-------------------mybatis数据库-----------------
spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.primary.jdbc-url=jdbc:mysql://localhost:3306/mybatis_test_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&nullNamePatternMatchesAll=true&useSSL=false
spring.datasource.primary.username=user
spring.datasource.primary.password=1234

spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.secondary.jdbc-url=jdbc:mysql://localhost:3306/mybatis_test_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&nullNamePatternMatchesAll=true&useSSL=false
spring.datasource.secondary.username=user
spring.datasource.secondary.password=1234
#-------------热部署---------------
#CTRL + SHIFT + A --> 查找make project automatically --> 选中
#CTRL + SHIFT + A --> 查找Registry --> 找到并勾选compiler.automake.allow.when.app.running
#加maven依赖
#<dependency>
#<groupId>org.springframework.boot</groupId>
#<artifactId>spring-boot-devtools</artifactId>
#<optional>true</optional>
#</dependency>
#开启热部署
#<build>
#<plugins>
#<plugin>
#<groupId>org.springframework.boot</groupId>
#<artifactId>spring-boot-maven-plugin</artifactId>
#<configuration>
#<fork>true</fork>//！！该配置必须！！
#</configuration>
#</plugin>
#</plugins>
#</build>
#--------------JPA----------------
#spring.jpa.show-sql=true
##无修改命名
##spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
##遇到大写字母 加”_”的命名
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
##自动生成实体类
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
##create-drop
##update
#-------------服务设置-----------------
#端口号
server.port=8096
#出现错误时, 直接抛出异常。可将404状态转为异常处理
spring.mvc.throw-exception-if-no-handler-found=true
spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/static/,classpath:/templates/,file:${custom-config.upload.path},file:${custom-config.page.path}
#默认接收上传文件的大小为100M，超出后报错
spring.servlet.multipart.max-file-size=100Mb
spring.servlet.multipart.maxRequestSize=100Mb
#-----------------logback------------------
#日志输出为文件的文件名
logging.file=./log.log
#---------------------自定义参数-----------------
#服务地址
custom-config.server.host=localhost
#FileRec接收上传文件工具类中上传目录
custom-config.upload.path=F:/uploadPath
#FileRec接收上传文件工具类最大文件大小   25*1024*1024为25M
custom-config.upload.file-max-size=25*1024*1024
#前端页面文件放置目录，若前端使用独立代理服务可忽略
custom-config.page.path=F:/testPageFiles/
#服务器host加port地址
custom-config.server.host-port=http://${custom-config.server.host}:${server.port}/
#logo路径
#custom-config.file-web-path=http://${custom-config.server.host}:${server.port}/files
#custom-config.file-path=src\\main\\resources\\static\\files
custom-config.log.mode=dev
#---------------------mybatis相关------------------
#mybatis日志打印sql语句
logging.level.server.db.primary.mapper=debug
logging.level.server.db.secondary.mapper=debug
#通用mapper配置
mapper.mappers=server.db.common.CommonMapper
mapper.not-empty=false
mapper.identity=MYSQL

#分页工具配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
#---------------------jackson配置、参数输出格式-------------------
#spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#spring.jackson.default-property-inclusion=non_null
#spring.jackson.time-zone=GMT+8
#---------------------form中时间格式、参数输入配置----------------
spring.mvc.dateFormat = yyyy-MM-dd HH:mm:ss
#---------------------socketio配置------------------
socketio.hostname=${custom-config.server.host}
socketio.port=8097