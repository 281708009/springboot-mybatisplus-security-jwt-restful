spring:
  datasource:
    secondary:
      password: 1234
      jdbc-url: jdbc:mysql://localhost:3306/mybatis_test_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GTM%2b8&nullNamePatternMatchesAll=true&useSSL=false
      driver-class-name: com.mysql.jdbc.Driver
      username: user
    primary:
      jdbc-url: jdbc:mysql://localhost:3306/mybatis_test_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&nullNamePatternMatchesAll=true&useSSL=false
      password: 1234
      driver-class-name: com.mysql.jdbc.Driver
      username: user
  servlet:
    multipart:
      maxRequestSize: 100MB #接收上传单个数据的大小为100M
      max-file-size: 100MB #接收上传总数据的大小为100M
  resources:
    static-locations: classpath:/static/,classpath:/templates/,file:${custom-config.upload.path},file:${custom-config.page.path} #自定义静态资源目录
  main:
    banner-mode: off
  mvc:
    #    static-path-pattern: /**
    dateFormat: yyyy-MM-dd HH:mm:ss
    throw-exception-if-no-handler-found: true #出现错误时, 直接抛出异常。可将404状态转为异常处理
server:
  port: 8096 #端口号

socketio: #socket.id配置
  hostname: ${custom-config.server.host}
  port: 8097
logging:
  file: ./log.log
  level:
    server:
      db:
        secondary:
          mapper: debug
        primary:
          mapper: debug
mapper: #通用mapper设置
  identity: MYSQL
  not-empty: false
  mappers: server.db.common.CommonMapper
pagehelper: #分页插件配置
  supportMethodsArguments: true
  reasonable: true
  helperDialect: mysql
  params: count=countSql
custom-config: #自定义配置
  server:
    host: localhost
    host-port: http://${custom-config.server.host}:${server.port}/
  log:
    mode: dev
  upload:
    path: F:/uploadPath/
    file-max-size: 25*1024*1024
  page:
    path: F:/pagePath/
#-------------热部署(热部署未启用)---------------
#CTRL + SHIFT + A --> 查找make project automatically --> 选中
#CTRL + SHIFT + A --> 查找Registry --> 找到并勾选compiler.automake.allow.when.app.running
#加maven依赖
#<dependency>
#<groupId>org.springframework.boot</groupId>
#<artifactId>spring-boot-devtools</artifactId>
#<optional>true</optional>
#</dependency>
#开启热部署
#<build>
#<plugins>
#<plugin>
#<groupId>org.springframework.boot</groupId>
#<artifactId>spring-boot-maven-plugin</artifactId>
#<configuration>
#<fork>true</fork>//！！该配置必须！！
#</configuration>
#</plugin>
#</plugins>
#</build>
#--------------JPA(尚未使用JPA作为持久化框架)----------------
#spring.jpa.show-sql=true
##无修改命名
##spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
##遇到大写字母 加”_”的命名
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
##自动生成实体类
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
##create-drop
##update
#---------------------jackson配置、参数输出格式(已使用fastJson)-------------------
#spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#spring.jackson.default-property-inclusion=non_null
#spring.jackson.time-zone=GMT+8